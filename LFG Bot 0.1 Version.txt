import discord
import random
from discord.ext import commands

bot_texts = {
    "Bot Text 1": "Tenno, a fellow Tenno operative needs your help in {event_type}, will you join this mission and help {username} conquer their quests?",
    "Bot Text 2": "Tenno, a fellow Tenno operative needs your help for their adventures, will you join them and help {username} set forth in creating a joyous memory?",
    "Bot Text 3": "Tenno, a new Tenno operative has emerged from their sleep, will you be kind and guide {username} in their upcoming journeys and be a mentor to them?",
    "Bot Text 4": "Tenno, a new Tenno operative has emerged from their sleep, will you be kind and guide {username} as a mentor just like how we started from the beginning?",
}

event_types = {
    "Free-roaming": [
        "Plains of Eidolon",
        "Bounty",
        "Eidolon Hunt",
        "Profit-Taker Orb",
        "Cetus",
        "Fishing",
        "Mining",
        "Conservation"
    ],
    "Farming": [
        "Fortuna",
        "Bounty",
        "Orb Vallis Bounty",
        "Exploiter Orb",
        "Profit-Taker Orb",
        "Duviri Paradox",
        "The Maw",
        "The Vault",
        "The Circuit"
    ],
    "Node Missions": [
        "Defense",
        "Excavation",
        "Interception",
        "Mobile Defense",
        "Nightmare Missions",
        "Onslaught",
        "Rescue",
        "Sabotage",
        "Survival"
    ],
    "Other": [
        "Arbitration",
        "Fissures",
        "Nightwave",
        "Relics",
        "Steel Path"
    ]
}

intents = discord.Intents.default()
intents.members = True
intents.presences = True
intents.messages = True
intents.message_content = True 

client = commands.Bot(command_prefix="$", intents=intents, help_command=None)
lfg_posts = []

@client.event
async def on_ready():
    print(f"LFG Bot is ready!")

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("Invalid command. Use `$help` to see a list of available commands.")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Missing required arguments. Use `$help <command>` to see the command usage.")
    else:
        await ctx.send(f"An error occurred: {str(error)}")

@client.command(name="create")
async def create_lfg(ctx, game, platform, players, role=None):
    if role is None:
        role = "LFG"

    if role == "Initiate":
        variable = "new Tenno"
        bot_text = random.choice(["Bot Text 3", "Bot Text 4"])
    elif role != "Initiate":
        variable = "fellow Tenno"
        bot_text = random.choice(["Bot Text 1", "Bot Text 2"])

    event_type = random.choice(event_types)
    username = ctx.author.name

    description = bot_texts[bot_text].format(variable=variable, event_type=event_type, username=username)

    embed = discord.Embed(
        title="LFG",
        description=f"{description} {role} / {players}/3",
        color=discord.Color.blue(),
    )
    embed.add_field(name="Platform", value=platform)
    embed.add_field(name="Players", value=players)

    await ctx.send(embed=embed)

    # Ping the mentioned role "@LFG"
    for role in ctx.guild.roles:
        if role.name == "LFG":
            await ctx.send(role.mention)

    # Add the LFG post to the list
    lfg_posts.append({"game": game, "platform": platform, "players": players, "role": role})

@client.command(name="search")
async def search_lfg(ctx, game, platform):
    results = []
    for post in lfg_posts:
        if post["game"] == game and post["platform"] == platform:
            results.append(post)

    await ctx.send(f"Here are the results for your search:")
    for result in results:
        await ctx.send(f"{result['game']} on {result['platform']}. Looking for {result['players']} players.")

@client.command(name="filter")
async def filter_lfg(ctx, game, platform, players):
    results = []
    for post in lfg_posts:
        if post["game"] == game and post["platform"] == platform and post["players"] == players:
            results.append(post)

    await ctx.send(f"Here are the results for your filter:")
    for result in results:
        await ctx.send(f"{result['game']} on {result['platform']}. Looking for {result['players']} players.")

@client.command(name="help")
async def help(ctx):
    help_message = """
    **LFG Bot Help**

    **Commands:**
    `$create <game> <platform> <players> <role>` - Create an LFG post.
    `$search <game> <platform>` - Search for LFG posts by game and platform.
    `$filter <game> <platform> <players>` - Filter LFG posts by game, platform, and players.
    `$ping` - Check the bot's latency.
    `$help` - Show this help message.
    """
    await ctx.send(help_message)

@client.command(name="ping")
async def ping(ctx):
    latency = client.latency
    await ctx.send(f"Pong! Latency: {latency*1000:.2f} ms")

# Replace 'YOUR_TOKEN' with your bot token

client.run("MTEyMTY4NzI0NTk1MTMzNjUyOQ.GGapZQ.DeecEr1Z5pNq1EuCMVYh-qjGFygmE1-3Z9Nx-o")
